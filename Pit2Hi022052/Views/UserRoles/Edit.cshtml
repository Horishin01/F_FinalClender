@model IdentityUserRole<string>

@{
    if (!(Model is not null)) { throw new NullReferenceException(); }
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>UserRole</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
     
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select class="form-select" asp-for="UserId" asp-items="ViewBag.UserId" disabled></select>
                <p><span class="text-danger" asp-validation-for="UserId"></span>&nbsp;</p>
            </div>

            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
                <select class="form-select" asp-for="RoleId" asp-items="ViewBag.RoleId" disabled></select>
                <p><span class="text-danger" asp-validation-for="RoleId"></span>&nbsp;</p>
            </div>

            <partial name="_EditPartial.cshtml" />

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
